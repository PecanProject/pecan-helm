## -------------------------------------------------------------------------------
## PECAN COMMON VARIABLES
## -------------------------------------------------------------------------------

image:
  project: pecan
  tag: null
  checks: "ncsa/checks:1.0.1"
  pullPolicy: IfNotPresent

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

## -------------------------------------------------------------------------------
## CLUSTER CONFIGURATION
## -------------------------------------------------------------------------------

## clustername is set to the short name that is shown in the pull down menu
clustername: demo

## clusterfqdn is set to the name that is stored in the machines table. This
## should be a Fully Qualified Domain Name. Probably want to add this to:
## betydb.ingress.hosts and ingress.hosts.
clusterfqdn: pecan.localhost

## initializeData should be set to true to load demo data.
initializeData: true

## rstudioUsers is set to a list of rstudio users, each with their own instance
## of rstudio. If not set no instance of rstudio is created. The list will need
## 2 parameters, username and password.
rstudioUsers: []
  # - username: carya
  #   password: illinois

## -------------------------------------------------------------------------------
## PECAN MODELS
## -------------------------------------------------------------------------------

## list of models to be installed. Each model should have the  following fields:
## enabled      : true/false - should the extractor be installed
## project      : the project (or server) where the image is stored, if this is
##                not specified it will use the same as image.project
## image        : docker/image:tag - the extractor docker image
## tag.         : the tagof the image to be used, if this is not specified it
##                will use the same as image.tag
## replicaCount : number - the number of this extractor to install
## env          : additional environment variables to pass to extractor.
## you can also specify resources, nodeSelector, affinity and tolerations.
##
## the image that is pulled will be create based on project/image:tag.
models:
  biocro-0-95:
    enabled: true
    image: model-biocro-0.95
    replicaCount: 1
  ed2-2-2-0:
    enabled: true
    image: model-ed2-2.2.0
    replicaCount: 1
  maespa-git:
    enabled: true
    image: model-maespa-git
    replicaCount: 1
  sipnet-git:
    enabled: true
    image: model-sipnet-git
    replicaCount: 1
  sipnet-136:
    enabled: true
    image: model-sipnet-r136
    replicaCount: 1

## -------------------------------------------------------------------------------
## BETYDB APPLICATION
## -------------------------------------------------------------------------------

betydb:
  ingress:
    ## should ingress rules be enabled (betydb is set below, monitor is set below)
    ## best set to the same value as PEcAn.
    enabled: false

    ## hostName used for the ingress rules (betydb is set below), best set to the
    ## same value as PEcAn.
    hosts:
      - pecan.localhost

    ## path prefix for all applications (betydb is set below)
    path: /bety/

  ## Use existing bety password as secret
  ## Create secret pecan-betydb-old with key betyPassword
  auth:
    existingSecret: ""
    secretKeys:
      betydbPasswordKey: ""
      betydbEncryptionKey: ""
## -------------------------------------------------------------------------------
## RABBITMQ APPLICATION
## -------------------------------------------------------------------------------

rabbitmq:
  rabbitmq:
    username: guest
    password: guest
    erlangCookie: 1234thisisasupersecretoflength32

  ingress:
    enabled: false
    hostName: rabbitmq.localhost
    path: /
  existingErlangSecret: ""
  existingPasswordSecret: ""
  secretKeys: 
    erlangCookieSecretKey: ""
    rabbitmqPasswordSecretKey: ""

## -------------------------------------------------------------------------------
## INGRESS RULES
## -------------------------------------------------------------------------------

## Configure the ingress resource that allows you to access the
## PECAN installation.
## ref: http://kubernetes.io/docs/user-guide/ingress/
ingress:
  # add ingress routes
  enabled: false

  # this should probably also contain clusterfqdn
  hosts:
    - pecan.localhost

  ## path prefix for all applications (betydb is set below)
  path: /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  ## Ingress annotations done as key:value pairs
  ## If you're using kube-lego, you will want to add:
  ## kubernetes.io/tls-acme: true
  ##
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  annotations:
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: true

## -------------------------------------------------------------------------------
## PECAN DOCUMENTATION
## -------------------------------------------------------------------------------

docs:
  ## replicaCount is the number of instances that should be running.
  replicaCount: 1

  ## service options
  service:
    ## ServiceType
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP

    ## port the service is listening on
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    port: 8000

  ## Resources
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  resources: {}

  ## Support Node, affinity and tolerations for flower pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  affinity: {}
  tolerations: []

## -------------------------------------------------------------------------------
## PECAN WEB APP
## -------------------------------------------------------------------------------

web:
  ## replicaCount is the number of instances that should be running.
  replicaCount: 1

  ## service options
  service:
    ## ServiceType
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP

    ## port the service is listening on
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    port: 8888

  ## Resources
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  resources: {}

  ## Support Node, affinity and tolerations for flower pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  affinity: {}
  tolerations: []

## -------------------------------------------------------------------------------
## PECAN EXECUTOR
## -------------------------------------------------------------------------------

executor:
  ## replicaCount is the number of instances that should be running.
  replicaCount: 1

  ## Resources
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  resources: {}

  ## Support Node, affinity and tolerations for flower pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  affinity: {}
  tolerations: []

## -------------------------------------------------------------------------------
## PECAN MODEL MONITOR
## -------------------------------------------------------------------------------

monitor:
  ## service options
  service:
    ## ServiceType
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP

    ## port the service is listening on
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    port: 9999

  ## Resources
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  resources: {}

  ## Support Node, affinity and tolerations for flower pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  affinity: {}
  tolerations: []

## -------------------------------------------------------------------------------
## PECAN RSTUDIO
## -------------------------------------------------------------------------------

rstudio:
  ## path is the path that is used when the ingress route is to be exposed
  ## in case of multiple rstudio this is the prefix of rstudio
  path: /rstudio/

  ## service options
  service:
    ## ServiceType
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP

    ## port the service is listening on
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    port: 8787

  ## Resources
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  resources: {}

  ## Support Node, affinity and tolerations for flower pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  affinity: {}
  tolerations: []

## -------------------------------------------------------------------------------
## PECAN APPLICATION DATA
## -------------------------------------------------------------------------------

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  ##
  #existingClaim: pecan-data

  ## The path the volume will be mounted at, useful when using different
  ## PostgreSQL images.
  ##
  mountPath: /data

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  #storageClass: "-"

  ## sisze of the storage class
  size: 20Gi

  ## Annotations
  annotations: {}

# -------------------------------------------------------------------------------

service:
  type: ClusterIP

# -------------------------------------------------------------------------------

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Tolerations
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Hook Affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
hooks:
  affinity: {}
